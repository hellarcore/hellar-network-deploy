name: Release

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  release:
    name: Release Hellar Network Deploy
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Check package version matches tag
        uses: geritol/match-tag-to-package-version@0.2.0
        env:
          TAG_PREFIX: refs/tags/v

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.11.2
          install: true
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set suffix to Docker tags
        uses: actions/github-script@v6
        id: suffix
        with:
          result-encoding: string
          script: "return (context.payload.release.tag_name.includes('-dev') ? '-dev' : '');"

      - name: Set Docker tags and labels
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: hellarcore/hellar-network-deploy
          tags: |
            type=match,pattern=v(\d+),group=1,enable=${{github.event_name == 'release'}}
            type=match,pattern=v(\d+.\d+),group=1,enable=${{github.event_name == 'release'}}
            type=match,pattern=v(\d+.\d+.\d+),group=1,enable=${{github.event_name == 'release'}}
            type=match,pattern=v(.*),group=1,suffix=,enable=${{ contains(github.event.release.tag_name, '-dev') }}
            type=match,pattern=v(.*),group=1,value=${{ github.event.inputs.tag }},enable=${{github.event_name == 'workflow_dispatch'}}
          flavor: |
            suffix=${{ steps.suffix.outputs.result }},onlatest=true
            latest=${{ github.event_name == 'release' }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Show Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
