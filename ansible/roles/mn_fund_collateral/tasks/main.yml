---

# Requires "masternode_names" variable

# check

- name: Reset collateral_ok_count
  ansible.builtin.set_fact:
    collateral_ok_count: 0

- name: Find existing masternode collaterals
  ansible.builtin.include_role:
    name: mn_find_collateral
  vars:
    masternode: "{{ mnlist[item] }}"
    masternode_name: "{{ item }}"
  with_items: '{{ masternode_names }}'

- name: Update collateral_all_ok
  ansible.builtin.set_fact:
    collateral_all_ok: "{{ collateral_ok_count | int == masternode_names | length }}"

- name: Show collateral_ok_count
  ansible.builtin.debug:
    msg: 'collateral_ok_count={{ collateral_ok_count }}'

# ensure faucet balance

- name: Check faucet balance
  ansible.builtin.command: 'hellar-cli -rpcwallet={{ wallet_rpc_wallet_faucet }} getbalance'
  register: faucet_balance
  changed_when: faucet_balance.stdout | int > 0

- name: Generate enough blocks to fund collaterals
  ansible.builtin.include_role:
    name: generate_blocks
  vars:
    generate: balance
    target_balance: "{{ (masternode_names | length - collateral_ok_count | int) * funding_amount | int }}"
  when: not collateral_all_ok and (faucet_balance.stdout | int < target_balance | int)

# fund

- name: Initialize array for uncollateralized addresses
  ansible.builtin.set_fact:
    uncollateralized_addresses: []

- name: Populate payment targets
  ansible.builtin.set_fact:
    uncollateralized_addresses: "{{ uncollateralized_addresses + [mnlist[item].collateral.address] }}"
  with_items: '{{ masternode_names }}'
  when: not vars["collateral_ok_" + item|replace("-","_")]

- name: Fund masternode collaterals
  ansible.builtin.include_tasks:
    file: fund_collateral.yml
  vars:
    amount: "{{ funding_amount }}"
    payment_targets: '{{ uncollateralized_addresses }}'
  when: not collateral_all_ok

# verify

- name: Reset collateral_ok_count
  ansible.builtin.set_fact:
    collateral_ok_count: 0
  when: not collateral_all_ok

# TODO: we can probably derive the masternode_name from masternode, no need to pass both vars
- name: Find existing masternode collaterals
  ansible.builtin.include_role:
    name: mn_find_collateral
  vars:
    masternode: "{{ mnlist[item] }}"
    masternode_name: "{{ item }}"
  when: not collateral_all_ok
  with_items: '{{ masternode_names }}'

- name: Fail if funding unsuccessful
  ansible.builtin.fail:
    msg: funding was not successful
  when: not collateral_all_ok and collateral_ok_count | int != masternode_names | length
