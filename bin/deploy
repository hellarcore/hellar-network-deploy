#!/usr/bin/env bash

set -ea

. ./lib/cli/utils.sh

ansible_playbook="deploy.yml"

CMD_USAGE="Deploy Hellar Network

Usage: deploy [options] <network_name>

Options:
  -i        --only-infrastructure         - Only build infrastructure using Terraform
  -p        --only-provisioning           - Only provisioning using Ansible
  -f        --force-deployment            - Force deployment of a devnet branch on a different devnet
  -s        --stage                       - Stage of deployment, defaults to first stage (1)
  -a=<args> --ansible-args=<args>         - Pass extra arguments to ansible-playbook command
            --ansible-playbook=<playbook> - Specify custom playbook. Default: deploy
  -h        --help                        - Show help"


STAGE=1 #Default
for i in "$@"
do
case ${i} in
    -i|--only-infrastructure)
    ONLY_INFRASTRUCTURE=1
    ;;
    -p|--only-provisioning)
    ONLY_PROVISIONING=1
    ;;
    -f|--force-deployment)
    FORCED_DEPLOYMENT=1
    ;;
    -a=*|--ansible-args=*)
    ANSIBLE_ARGS="${i#*=}"
    ;;
    --ansible-playbook=*)
    ansible_playbook="${i#*=}.yml"
    ;;
    -s=*|--stage=*)
    STAGE="${i#*=}"
    ;;
    -h|--help)
        echo "$CMD_USAGE"
        exit 0
    ;;
    *)
    NETWORK_NAME="${i#*=}"
    ;;
esac
done

. ./lib/cli/init.sh
. ./lib/cli/terraform.sh
. ./lib/cli/ansible.sh

case ${STAGE} in
    1)
        echo "Deploying $NETWORK_NAME network... stage (1)";

        # TODO: this fails if not at the HEAD of a given branch
        BRANCH=$(git symbolic-ref --short HEAD)
        if [[ $BRANCH == "devnet-"* ]]; then
            if [[ $BRANCH != $NETWORK_NAME ]] && [[ $FORCED_DEPLOYMENT != 1 ]]; then
                echo "Wrong Devnet - Check you're in the correct branch. Use -f to force if you're sure"
                exit 1
            fi
        fi

        # Setup infrastructure using Terraform
        if [ -z ${ONLY_PROVISIONING} ]; then
            terraform_run_command "apply"
        else
            echo "Skipping Terraform infrastructure deployment"
        fi

        # Install software and configure hellar network using Ansible
        if [ -z ${ONLY_INFRASTRUCTURE} ]; then
            ansible_run_playbook "$ansible_playbook"
        else
            echo "Skipping Ansible provisioning"
        fi
    ;;
    2)
        ansible_run_playbook "stage2.yml"
    ;;
esac
